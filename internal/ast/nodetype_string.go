// Code generated by "stringer -type=NodeType"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[BAD_CONTRACT_ITEM-1]
	_ = x[BAD_MODULE_ITEM-2]
	_ = x[BAD_EXPR-3]
	_ = x[DOC_COMMENT-4]
	_ = x[COMMENT-5]
	_ = x[MODULE-6]
	_ = x[ATTRIBUTE-7]
	_ = x[USE-8]
	_ = x[NAMESPACE-9]
	_ = x[IMPORT_ITEM-10]
	_ = x[STRUCT-11]
	_ = x[STRUCT_FIELD-12]
	_ = x[TYPE-13]
	_ = x[REF_TYPE-14]
	_ = x[IDENT-15]
	_ = x[FUNCTION-16]
	_ = x[FUNCTION_PARAM-17]
	_ = x[FUNCTION_BLOCK-18]
	_ = x[EXPR_STMT-19]
	_ = x[RETURN_STMT-20]
	_ = x[LET_STMT-21]
	_ = x[ASSIGN_STMT-22]
	_ = x[ASSERT_STMT-23]
	_ = x[BINARY_EXPR-24]
	_ = x[UNARY_EXPR-25]
	_ = x[CALL_EXPR-26]
	_ = x[FIELD_ACCESS_EXPR-27]
	_ = x[STRUCT_LITERAL_EXPR-28]
	_ = x[LITERAL_EXPR-29]
	_ = x[IDENT_EXPR-30]
	_ = x[CALLEE_PATH-31]
	_ = x[STRUCT_LITERAL_FIELD-32]
	_ = x[PAREN_EXPR-33]
}

const _NodeType_name = "ILLEGALBAD_CONTRACT_ITEMBAD_MODULE_ITEMBAD_EXPRDOC_COMMENTCOMMENTMODULEATTRIBUTEUSENAMESPACEIMPORT_ITEMSTRUCTSTRUCT_FIELDTYPEREF_TYPEIDENTFUNCTIONFUNCTION_PARAMFUNCTION_BLOCKEXPR_STMTRETURN_STMTLET_STMTASSIGN_STMTASSERT_STMTBINARY_EXPRUNARY_EXPRCALL_EXPRFIELD_ACCESS_EXPRSTRUCT_LITERAL_EXPRLITERAL_EXPRIDENT_EXPRCALLEE_PATHSTRUCT_LITERAL_FIELDPAREN_EXPR"

var _NodeType_index = [...]uint16{0, 7, 24, 39, 47, 58, 65, 71, 80, 83, 92, 103, 109, 121, 125, 133, 138, 146, 160, 174, 183, 194, 202, 213, 224, 235, 245, 254, 271, 290, 302, 312, 323, 343, 353}

func (i NodeType) String() string {
	if i < 0 || i >= NodeType(len(_NodeType_index)-1) {
		return "NodeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeType_name[_NodeType_index[i]:_NodeType_index[i+1]]
}
